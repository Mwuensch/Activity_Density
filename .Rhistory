guides(fill = guide_legend(override.aes=list(shape=21))) +
ylim(min(RDA_data$PC1)*1.1, max(RDA_data$PC1)) +
xlim(min(RDA_data$RDA1)*1.68, max(RDA_data$RDA1)*1.4) +
geom_segment(aes(x = 0, y = 0, xend = RDA1, yend = PC1), data = sel.spp.scores, size =1, alpha = 0.95, colour = "grey30") +
geom_text_repel(data = sel.spp.scores, aes(x = RDA1, y = PC1, label = species), colour = "black", fontface = "bold", size = 3.5)
veg.rda.plot.enviro.spp
ggsave("2.Habitat.RDA.png", veg.rda.plot.enviro.spp, units = "mm", dpi = 300, width = 174, height = 174)
ggsave("2.Habitat.RDA.png", veg.rda.plot.enviro.spp, units = "mm", dpi = 300, width = 174, height = 174)
# Exporting RDA and PC1 scores for all species as a supplemental table
export <-	summary(veg.rda)
write.csv(export, "rda.spp.scores.csv")
export
spp.scores
# Exporting RDA and PC1 scores for all species as a supplemental table
write.csv(spp.scores, "rda.spp.scores.csv")
RDA_var
summary(veg.rda)
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_text(face = "bold"), legend.position = c(0, 1),legend.justification = c(0, 1))
#Quality plot
qual.plot <- ggplot(data = qual, aes(x = Time, y = VOC)) +
geom_smooth(method = "loess", se = FALSE, color = "gold2", size = 1.75) +
geom_smooth(aes(Time, Quality), method = "loess", se = FALSE, color = "forestgreen", size = 1.75)+
plot.format +
ylab("") +
ylim(2,40) +
xlab("Green-up")
library(ggplot2)
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_text(face = "bold"), legend.position = c(0, 1),legend.justification = c(0, 1))
#Quality plot
qual.plot <- ggplot(data = qual, aes(x = Time, y = VOC)) +
geom_smooth(method = "loess", se = FALSE, color = "gold2", size = 1.75) +
geom_smooth(aes(Time, Quality), method = "loess", se = FALSE, color = "forestgreen", size = 1.75)+
plot.format +
ylab("") +
ylim(2,40) +
xlab("Green-up")
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = VOC)) +
geom_smooth(method = "loess", se = FALSE, color = "gold2", size = 1.75) +
geom_smooth(aes(Time, Quality), method = "loess", se = FALSE, color = "forestgreen", size = 1.75)+
plot.format +
ylab("") +
ylim(2,40) +
xlab("Green-up")
qual.plot
dev.new()
qual.plot
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
dev.new()
qual.plot
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24. <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24. <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24. <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24. <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
dev.new()
qual.plot
qual.24. <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24. <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24. <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
qual.24. <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
qual.24.
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility kkValue")
qual.plot
qual.24 <- read.csv("C:/Users/mwuen/Documents/R/Misc/post.doc/post.doc.ex.24.csv")
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 16), axis.title.y = element_text(size = 16),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
qual.plot
ggsave("C:/Users/mwuen/Documents/R/Misc/NSFtheo2.jpg", qual.plot, height = 6.29, width = 9.31, units = "in", dpi = 500)
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 18), axis.title.y = element_text(size = 18),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
ggsave("C:/Users/mwuen/Documents/R/Misc/NSFtheo2.jpg", qual.plot, height = 6.29, width = 9.31, units = "in", dpi = 500)
#Plot format
plot.format <- theme(axis.text.x = element_blank() ,axis.text.y = element_blank(), axis.ticks.x = element_blank(), axis.ticks.y = element_blank(),
axis.title.x = element_text(size= 20), axis.title.y = element_text(size = 20),
panel.background = element_blank(), panel.border = element_blank(),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black", size = 1.25), legend.title = element_blank(), legend.position = c(0, 1),legend.justification = c(-0.25, 1), legend.text = element_text(size = 20))
#Quality plot
qual.plot <- ggplot(data = qual.24, aes(x = Time, y = Measure, color = Metric)) +
geom_line(stat = "smooth", method = "loess", se = FALSE, size = 2, alpha = 0.75) +
scale_color_manual(values = c("#7E9680", "#706695", "#D87F81"))+
ylab("") +
ylim(2,40) +
plot.format +
scale_x_continuous(expand = c(0, 0))+
xlab("Time (Green-Up)") +
ylab("VOC/Digestibility Value")
ggsave("C:/Users/mwuen/Documents/R/Misc/NSFtheo2.jpg", qual.plot, height = 6.29, width = 9.31, units = "in", dpi = 500)
set.seed(63)
library(dplyr)
library(lme4)
library(ggplot2)
library(tidyr)
library(adehabitatHS)
gud <- read.csv("Total.guds.2.17.csv")
#Change categorical data to factors instead of characters
gud$Season <- as.factor(gud$Season)
gud$Site <- as.factor(gud$Site)
gud$Habitat <- as.factor(gud$Habitat)
gud$habdist <- paste(gud$Habitat,gud$Edgedist)
# Remove preliminary winter data
gud <- gud %>%
filter(!Season=="winter1")
#Adding a column to make guds into activity densities
gud$activity <- 1600-gud$GUD
gud$act.prop <- gud$activity/1600 #This gives us an activity score. Values closer to 0 mean avoidance/less use and values closer to 1 mean preference/greater use. May use, may not
### Get a value for each Habitat on each transect within each site
# SPRING
gud.sp <- gud %>%
filter(Season == "spring")
# Site.sect
gud.sp$site.sect <- paste(gud.sp$Site, gud.sp$Transect)
gud.sp
pref.sp <- gud.sp %>%
complete(site.sect, Habitat) %>%
group_by(site.sect, Habitat) %>%
summarise(consumed = sum(activity, na.rm = FALSE))
pref.sp <- na.omit(pref.sp)
pref.sp.wide <- spread(pref.sp, Habitat, consumed)
pref.sp.wide
pref.sp.wide
# SUMMER
gud.su <- gud %>%
filter(Season == "summer")
# Site.sect
gud.su$site.sect <- paste(gud.su$Site, gud.su$Transect)
pref.su <- gud.su %>%
complete(site.sect, Habitat) %>%
group_by(site.sect, Habitat) %>%
summarise(consumed = sum(activity, na.rm = FALSE))
pref.su <- na.omit(pref.su)
pref.su.wide <- spread(pref.su, Habitat, consumed)
# FALL
gud.au <- gud %>%
filter(Season == "fall")
# Site.sect
gud.au$site.sect <- paste(gud.au$Site, gud.au$Transect)
pref.au <- gud.au %>%
complete(site.sect, Habitat) %>%
group_by(site.sect, Habitat) %>%
summarise(consumed = sum(activity, na.rm = FALSE))
pref.au <- na.omit(pref.au)
pref.au.wide <- spread(pref.au, Habitat, consumed)
# WINTER
gud.wt <- gud %>%
filter(Season == "winter")
# Site.sect
gud.wt$site.sect <- paste(gud.wt$Site, gud.wt$Transect)
pref.wt <- gud.wt %>%
complete(site.sect, Habitat) %>%
group_by(site.sect, Habitat) %>%
summarise(consumed = sum(activity, na.rm = FALSE))
pref.wt <- na.omit(pref.wt)
pref.wt.wide <- spread(pref.wt, Habitat, consumed)
### Calculating selection ratios
#Set forage availability
forage.available.2 <- c(19200, 19200)
### Naming the values
names(forage.available.2) <- c("field", "woods")
#### Using adehabitat hs to run a type II (Individual level, instead of each being for an individual though each is for a transect of feeders) analysis of preference. Dropping the ecotone
(wi.sp <- widesII(pref.sp.wide[,3:4], forage.available.2, avknown = TRUE, alpha = 0.05))
(wi.su <- widesII(pref.su.wide[,3:4], forage.available.2, avknown = TRUE, alpha = 0.05))
(wi.au <- widesII(pref.au.wide[,3:4], forage.available.2, avknown = TRUE, alpha = 0.05))
(wi.wt <- widesII(pref.wt.wide[,3:4], forage.available.2, avknown = TRUE, alpha = 0.05))
#### Save the outputS as a dfS for plotting
#Spring
wi.sp.output <- data.frame(wi.sp$avail.prop, wi.sp$used.prop, wi.sp$wi, wi.sp$se.wi, wi.sp$ICwiupper, wi.sp$ICwilower)
